---
interface Props {
  text: string;
  link: string;
}

const pathname = new URL(Astro.request.url).pathname;

const { text, link } = Astro.props;

// Compare current URL path to path passed into component, remove trailing slash to keep consistent
const pathMatch = pathname.replace(/\/$/, '') === link.replace(/\/$/, '');
---

<li class="menu-item">
  <a class={`menu-item-link ${pathMatch ? "active" : ""}`} href={link}>{text}</a>
</li>

<style lang="scss">
  .menu-item {
    margin-bottom: 0;
  }

  .menu-item-link {
    padding: 5px 12px;
    font-size: var(--font-size-base);
    color: var(--color-silver-100);
    font-family: var(--font-family-Freight-Display-Pro);
    font-weight: 500;
    transition: all 250ms ease-in-out;
    &:hover {
      text-decoration: none;
      color: #FFCC00;
      text-shadow: 0px 2px 18px #FFCC00
    }
    &.active {
      text-shadow: 0px 5px 10px #FFCC00;
    }
  }

  @media screen and (max-width: 980px) {
    .menu-item-link {
      font-size: var(--font-size-2xl);
      font-weight: 600;
      &.active {
        text-shadow: 0px 2px 18px #FFCC00;
      }
    }
  }
</style>