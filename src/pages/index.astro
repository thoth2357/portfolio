---
import BaseLayout from "../layouts/BaseLayout.astro";
import HorizontalCard from "../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import { yearsInIndustry } from "../js/yearsInIndustry";

const posts = (await getCollection("blog")).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const last_posts = posts.slice(0, 3);

---

<BaseLayout sideBarActiveItemID="home">

	<div class="pb-12 mt-5">
		<div class="text-xl py-1"><div id="greeting"></div></div>
		<div class="text-5xl font-bold">I'm Oluwaseyi (Ekpere) Oyewunmi</div>
		<div class="text-3xl py-3 font-bold">Software Engineer and Conjurer of digital dreams</div>
		<div class="py-2">
			<text class="text-lg">
				I'm a Software professional from Nigeria with over {yearsInIndustry} years of experience developing software solutions. With a deep passion for cloud, machine learning and AI, I craft intricate digital solutions using multiple technologies. Beyond coding, I seek wisdom from diverse sources, translating it into code. My journey spans Backend Engineering, System administration,Desktop Develoment, DevOps and fantasizing on beautiful UI's 🙈. 
			</text>
		</div>
		<div class="flex flex-wrap mt-8">
			<div class="pb-2">
				<a
				class="btn btn-outline btn-secondary ml-5"
				href="https://www.linkedin.com/in/oluwaseyi-oyewunmi-b486ab17b/"
				target="_blank">
				Let's connect 🤝🏻 </a>
			</div>
			<div class="pb-2">
				<a href="/projects" target="" class="btn ml-5"> View Projects 💼</a>
			</div>
			<div class="pb-2">
				<a href="/cv" target="" class="btn ml-5"> Resume Peek 📑</a>
			</div>
			<div class="pb-2">
				<a href="/blog" target="" class="btn ml-5"> Read Blog ✍🏾</a>
			</div>
		</div>
	</div>

	<div>
		<div>
			<div id="activityTitle" class="text-3xl w-full font-bold mb-2">
				Coding Activity {"👨🏾‍💻"}
			</div>
		</div>
		<div class="flex">
			<div class="flex space-x-2">
				<button id="prevActivity" class="text-blue-500 hidden" aria-label="Previous Actvity Button"
					><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6">
					<path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25Zm-4.28 9.22a.75.75 0 0 0 0 1.06l3 3a.75.75 0 1 0 1.06-1.06l-1.72-1.72h5.69a.75.75 0 0 0 0-1.5h-5.69l1.72-1.72a.75.75 0 0 0-1.06-1.06l-3 3Z" clip-rule="evenodd" />
					</svg>
				</button>
			</div>
			<figure id="activity1" class="visible">
				<a href="https://wakatime.com"><img src="https://wakatime.com/share/@oluwseyi/503325e6-be92-4bab-a002-26c359d6e36c.png" alt="Wakatime Coding Graph" /></a>
			</figure>

			<figure id="activity2" class="w-[700px] relative rounded-md drop-shadow-lg hidden">
				<div id="embed-iframe"></div>
				<!-- <iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/3NeDFOlOOmHaEtRxrBs344?utm_source=generator&theme=0" width="100%" height="152" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe> -->
			</figure>
			
			<figure id="activity3" class="hidden last-activity">
				<iframe
					src="https://leetcard.jacoblin.cool/thoth2357?width=500&theme=dark&font=milonga&border=0"
					width="250"
					height="100"
				></iframe>
			</figure>
			
			<div class="flex space-x-2">
				<button id="nextActivity" class="text-blue-500" aria-label="Next Actvity Button"
					><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6">
						<path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25Zm4.28 10.28a.75.75 0 0 0 0-1.06l-3-3a.75.75 0 1 0-1.06 1.06l1.72 1.72H8.25a.75.75 0 0 0 0 1.5h5.69l-1.72 1.72a.75.75 0 1 0 1.06 1.06l3-3Z" clip-rule="evenodd" />
					</svg>
				</button
				>
			</div>
		</div>
	</div>

<div class="divider my-0"></div>

<div>
	<div class="text-3xl w-full font-bold mb-5 mt-10">Latest from blog ✍🏾</div>
</div>

{
	last_posts.map((post) => (
		<>
			<HorizontalCard
				title={post.data.title}
				img={post.data.heroImage}
				desc={post.data.description}
				url={"/blog/" + post.slug}
				target="_self"
				badge={post.data.badge}
			/>
			<div class="divider my-0" />
		</>
	))
}

<div class="popup fixed top-0 left-0 w-full h-full justify-center items-center bg-black bg-opacity-50 hidden" id="mobilePopup">
	<div>
		<div class="popup-content bg-white p-8 text-center">
			<div class="flex flex-row items-center justify-center flex-wrap">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-12 h-12">
					<path stroke-linecap="round" stroke-linejoin="round" d="m11.25 11.25.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9-3.75h.008v.008H12V8.25Z" />
				</svg>
			</div>
			<p class="mb-4">I Detected you're using a mobile device, you might miss some juicy features available in the desktop device/view</p>
			<button class="btn btn-neutral" id="closePopup">Enter Website 🚪🚪</button>
    	</div>
	</div>
</div>
</BaseLayout>

<script src="https://open.spotify.com/embed/iframe-api/v1" async></script>

<script>
	import { greeting } from "../js/greeting";
	const greetingContainer = document.getElementById("greeting");
	greetingContainer.innerText = greeting();

	window.onSpotifyIframeApiReady = (IFrameAPI) => {
		const element = document.getElementById("embed-iframe");
		const options = {
			width: "100%",
			height: "152",
			theme: "dark",
			uri: "spotify:track:0q4fyBmazN8IvpdZW6UiRv",
		};
		const callback = (EmbedController) => {};
		IFrameAPI.createController(element, options, callback);
	};
	document.addEventListener("DOMContentLoaded", function () {
		const prevButton = document.getElementById("prevActivity");
		const nextButton = document.getElementById("nextActivity");
		const activityTitle = document.getElementById("activityTitle");
		const activity1 = document.getElementById("activity1");
		const activity2 = document.getElementById("activity2");
		const activity3 = document.getElementById("activity3");

		nextButton.addEventListener("click", function () {
			if (activity1.classList.contains("visible")) {
				activity1.classList.remove("visible");
				activity1.classList.add("hidden");

				activity2.classList.remove("hidden");
				activity2.classList.add("visible");

				prevButton.classList.remove("hidden");

				// Check if the last activity is visible, hide the next button
				if (activity2.classList.contains("last-activity")) {
					nextButton.classList.add("hidden");
				}

				// Update Today's Activity based on the currently visible figure
				activityTitle.textContent = "Music Activity 🎧";
			} else if (activity2.classList.contains("visible")) {
				activity2.classList.remove("visible");
				activity2.classList.add("hidden");

				activity3.classList.remove("hidden");
				activity3.classList.add("visible");

				// Check if the last activity is visible, hide the next button
				if (activity3.classList.contains("last-activity")) {
					nextButton.classList.add("hidden");
				}

				// Update Today's Activity based on the currently visible figure
				activityTitle.textContent = "LeetCode Activity 🧠";
			}
		});

		prevButton.addEventListener("click", function () {
			if (activity2.classList.contains("visible")) {
				activity2.classList.remove("visible");
				activity2.classList.add("hidden");

				activity1.classList.remove("hidden");
				activity1.classList.add("visible");

				prevButton.classList.add("hidden");
				nextButton.classList.remove("hidden");

				// Update Today's Activity based on the currently visible figure
				activityTitle.textContent = "Coding Activity 👨🏾‍💻";
			} else if (activity3.classList.contains("visible")) {
				activity3.classList.remove("visible");
				activity3.classList.add("hidden");

				activity2.classList.remove("hidden");
				activity2.classList.add("visible");

				// Check if the last activity is visible, hide the next button
				if (activity2.classList.contains("last-activity")) {
					nextButton.classList.add("hidden");
				}

				// Update Today's Activity based on the currently visible figure
				activityTitle.textContent = "Music Activity 🎧";
			}
		});
		var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);

		if (isMobile && window.innerWidth <= 768) {
			if (localStorage.getItem("popupViewed") === "true") {
				return;
			} else {
				var mobilePopup = document.getElementById("mobilePopup");
				mobilePopup.style.display = "flex";
			}
		}

		var closePopupButton = document.getElementById("closePopup");
		closePopupButton.addEventListener("click", function () {
			var mobilePopup = document.getElementById("mobilePopup");
			mobilePopup.style.display = "none";	
			
			localStorage.setItem("popupViewed", "true");
		});
	});

	

</script>
