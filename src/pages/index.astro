---
import BaseLayout from "../layouts/BaseLayout.astro";
import HorizontalCard from "../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import { yearsInIndustry } from "../js/yearsInIndustry";

const posts = (await getCollection("blog")).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const last_posts = posts.slice(0, 3);

const books = await getCollection("books");
const sortedBooks = books.sort((a, b) => a.data.order - b.data.order);
const currentBook = sortedBooks.find(book => book.data.status === "current");
const otherBooks = sortedBooks.filter(book => book.data.status !== "current");

---

<BaseLayout sideBarActiveItemID="home">

	<div class="pb-12 mt-5">
		<div class="text-xl py-1"><div id="greeting"></div></div>
		<div class="text-5xl font-bold">Oluwaseyi (Ekpere) Oyewunmi</div>
		<div class="text-3xl py-3 font-bold">Software Engineer & Systems Architect</div>
		<div class="py-2">
			<text class="text-lg">
				Full-stack developer with {yearsInIndustry} years experience building production-grade systems. 
				Specializing in Python backend development and cloud-native solutions (GCP/AWS). 
				Proven track record in:
			</text>
			<ul class="list-disc pl-8 mt-4 space-y-2">
				<li>Designing REST/GraphQL APIs handling 5k+ RPM</li>
				<li>Containerized deployments with Docker/Kubernetes</li>
				<li>Cloud-native solutions (GCP/AWS)</li>
				<li>Models training, inference and deployment (TensorFlow/PyTorch)</li>
			</ul>
		</div>
		
		<!-- Technical Snapshot -->
		<div class="my-6 p-4 bg-base-200 rounded-lg">
			<div class="flex flex-wrap gap-2">
				<div class="badge badge-primary">Python</div>
				<div class="badge badge-secondary">DevOps</div>
				<div class="badge badge-accent">AWS</div>
				<div class="badge badge-accent">ML/AI</div>
				<div class="badge badge-secondary">GCP</div>
				<div class="badge badge-accent">Kubernetes</div>
				<div class="badge badge-neutral">TensorFlow</div>
				<div class="badge">PostgreSQL</div>
				<div class="badge">FastAPI</div>
				<div class="badge">Terraform</div>
				
			</div>
		</div>

		<div class="flex flex-wrap mt-8 gap-4">
			<a href="https://www.linkedin.com/in/oluwaseyi-oyewunmi/" target="_blank" class="btn btn-primary">
				Let's Connect ü§ù
			</a>
			<a href="/projects" class="btn btn-accent">
				<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 24 24" fill="currentColor">
					<path d="M13 16v5h-2v-5H4v7h16v-7h-7zm9-9h-7V2h-2v5H4v7h7v-2h2v2h7V7z"/>
				</svg>
				View Projects
			</a>
			<a href="/cv" class="btn btn-outline btn-secondary">
				Technical CV üìë
			</a>
			<a href="/blog" class="btn btn-outline btn-secondary">
				Read Blog üìñ
			</a>
			<a href="https://github.com/thoth2357" target="_blank" class="btn btn-outline">
				<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 24 24" fill="currentColor">
					<path fill-rule="evenodd" d="M12 2C6.477 2 2 6.477 2 12c0 4.418 2.865 8.166 6.839 9.489.5.092.682-.217.682-.482 0-.237-.008-.866-.013-1.7-2.782.603-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.03 1.531 1.03.892 1.529 2.341 1.089 2.91.833.091-.647.349-1.086.635-1.337-2.22-.253-4.555-1.11-4.555-4.943 0-1.091.39-1.984 1.03-2.682-.103-.254-.447-1.27.098-2.646 0 0 .84-.269 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.295 2.747-1.026 2.747-1.026.547 1.376.203 2.394.1 2.646.64.698 1.026 1.591 1.026 2.682 0 3.841-2.337 4.687-4.565 4.935.359.307.678.915.678 1.846 0 1.335-.012 2.415-.012 2.741 0 .267.18.577.688.48C19.138 20.16 22 16.418 22 12c0-5.523-4.477-10-10-10z" clip-rule="evenodd"/>
				</svg>
				GitHub
			</a>
		</div>
	</div>

	<div class="mt-10">
		<div>
			<div id="activityTitle" class="text-3xl w-full font-bold mb-5">
				Reading Activity üìö
			</div>
		</div>
		<div class="flex">
			<div class="flex space-x-2">
				<button id="prevActivity" class="text-blue-500 hidden" aria-label="Previous Activity Button">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6">
						<path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25Zm-4.28 9.22a.75.75 0 0 0 0 1.06l3 3a.75.75 0 1 0 1.06-1.06l-1.72-1.72h5.69a.75.75 0 0 0 0-1.5h-5.69l1.72-1.72a.75.75 0 0 0-1.06-1.06l-3 3Z" clip-rule="evenodd" />
					</svg>
				</button>
			</div>

			<figure id="activity1" class="visible w-full">
				<div class="bookshelf-container relative p-2 -mt-6">
					<div class="books-wrapper flex items-end gap-[8px] mb-2 px-6 relative h-[140px]">
						{/* Currently Reading Book */}
						{currentBook && (
							<a href={currentBook.data.url} target="_blank" rel="noopener noreferrer" class="book-link">
								<div class="book-wrapper current-book" style="height: 120px; width: 85px; margin-right: 12px;">
									<div class="book-3d">
										<div class="book-cover">
											<img 
												src={currentBook.data.coverImage} 
												alt={currentBook.data.title}
												class="w-full h-full object-cover"
											/>
											<div class="status-dot current"></div>
										</div>
									</div>
								</div>
							</a>
						)}

						{/* Other Books */}
						{otherBooks.map((book) => (
							<a href={book.data.url} target="_blank" rel="noopener noreferrer" class="book-link">
								<div class="book-wrapper" style="height: 115px; width: 70px;">
									<div class="book-3d">
										<div class="book-cover">
											<img 
												src={book.data.coverImage} 
												alt={book.data.title}
												class="w-full h-full object-cover"
											/>
											<div class={`status-dot ${book.data.status}`}></div>
										</div>
									</div>
								</div>
							</a>
						))}
					</div>

					<!-- Updated Reading Status Legend -->
					<div class="reading-status mt-2 flex justify-center gap-6 text-xs">
						<span class="flex items-center gap-2">
							<div class="w-2 h-2 rounded-full bg-emerald-400"></div>
							Current
						</span>
						<span class="flex items-center gap-2">
							<div class="w-2 h-2 rounded-full bg-amber-400"></div>
							Next
						</span>
						<span class="flex items-center gap-2">
							<div class="w-2 h-2 rounded-full bg-indigo-400"></div>
							Queue
						</span>
						<span class="flex items-center gap-2">
							<div class="w-2 h-2 rounded-full bg-neutral-400"></div>
							Done
						</span>
					</div>
				</div>
			</figure>

			<figure id="activity2" class="hidden w-full">
				<a href="https://wakatime.com">
					<img src="https://wakatime.com/share/@oluwseyi/503325e6-be92-4bab-a002-26c359d6e36c.png" alt="Wakatime Coding Graph" />
				</a>
			</figure>

			<figure id="activity3" class="hidden w-full">
				<iframe
					src="https://leetcard.jacoblin.cool/thoth2357?width=500&height=270&theme=dark&font=milonga&border=0"
					width="290"
					height="150"
				></iframe>
			</figure>

			<div class="flex space-x-2">
				<button id="nextActivity" class="text-blue-500" aria-label="Next Activity Button">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6">
						<path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25Zm4.28 9.22a.75.75 0 0 0 0 1.06l-3 3a.75.75 0 1 1-1.06-1.06l1.72-1.72H8.25a.75.75 0 0 1 0-1.5h5.69l-1.72-1.72a.75.75 0 0 1 1.06-1.06l3 3Z" clip-rule="evenodd" />
					</svg>
				</button>
			</div>
		</div>
	</div>

<div class="divider my-0"></div>

<div>
	<div class="text-3xl w-full font-bold mb-5 mt-10">Latest from blog ‚úçüèæ</div>
</div>

{
	last_posts.map((post) => (
		<>
			<HorizontalCard
				title={post.data.title}
				img={post.data.heroImage}
				desc={post.data.description}
				url={"/blog/" + post.slug}
				target="_self"
				badge={post.data.badge}
			/>
			<div class="divider my-0" />
		</>
	))
}

<div class="popup fixed top-0 left-0 w-full h-full justify-center items-center bg-black bg-opacity-50 hidden" id="mobilePopup">
	<div>
		<div class="popup-content bg-white p-8 text-center">
			<div class="flex flex-row items-center justify-center flex-wrap">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-12 h-12">
					<path stroke-linecap="round" stroke-linejoin="round" d="m11.25 11.25.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9-3.75h.008v.008H12V8.25Z" />
				</svg>
			</div>
			<p class="mb-4">I Detected you're using a mobile device, you might miss some juicy features available in the desktop device/view</p>
			<button class="btn btn-neutral" id="closePopup">Enter Website üö™üö™</button>
    	</div>
	</div>
</div>
</BaseLayout>

<script src="https://open.spotify.com/embed/iframe-api/v1" async></script>

<script>
	import { greeting } from "../js/greeting";
	const greetingContainer = document.getElementById("greeting");
	greetingContainer.innerText = greeting();

	window.onSpotifyIframeApiReady = (IFrameAPI) => {
		const element = document.getElementById("embed-iframe");
		const options = {
			width: "100%",
			height: "152",
			theme: "dark",
			uri: "spotify:track:0q4fyBmazN8IvpdZW6UiRv",
		};
		const callback = (EmbedController) => {};
		IFrameAPI.createController(element, options, callback);
	};
	document.addEventListener("DOMContentLoaded", function () {
		const prevButton = document.getElementById("prevActivity");
		const nextButton = document.getElementById("nextActivity");
		const activityTitle = document.getElementById("activityTitle");
		const activity1 = document.getElementById("activity1");
		const activity2 = document.getElementById("activity2");
		const activity3 = document.getElementById("activity3");

		nextButton.addEventListener("click", function () {
			if (activity1.classList.contains("visible")) {
				activity1.classList.replace("visible", "hidden");
				activity2.classList.replace("hidden", "visible");
				prevButton.classList.remove("hidden");
				activityTitle.textContent = "Coding Activity üë®üèæ‚Äçüíª";
			} else if (activity2.classList.contains("visible")) {
				activity2.classList.replace("visible", "hidden");
				activity3.classList.replace("hidden", "visible");
				nextButton.classList.add("hidden");
				activityTitle.textContent = "LeetCode Activity üß†";
			}
		});

		prevButton.addEventListener("click", function () {
			if (activity3.classList.contains("visible")) {
				activity3.classList.replace("visible", "hidden");
				activity2.classList.replace("hidden", "visible");
				nextButton.classList.remove("hidden");
				activityTitle.textContent = "Coding Activity üë®üèæ‚Äçüíª";
			} else if (activity2.classList.contains("visible")) {
				activity2.classList.replace("visible", "hidden");
				activity1.classList.replace("hidden", "visible");
				prevButton.classList.add("hidden");
				activityTitle.textContent = "Reading Activity üìö";
			}
		});
		var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);

		if (isMobile && window.innerWidth <= 768) {
			if (localStorage.getItem("popupViewed") === "true") {
				return;
			} else {
				var mobilePopup = document.getElementById("mobilePopup");
				mobilePopup.style.display = "flex";
			}
		}

		var closePopupButton = document.getElementById("closePopup");
		closePopupButton.addEventListener("click", function () {
			var mobilePopup = document.getElementById("mobilePopup");
			mobilePopup.style.display = "none";	
			
			localStorage.setItem("popupViewed", "true");
		});
	});

	

</script>
